#!/bin/bash
# Command-line tool for grabbing data from the Bitbucket API
# set BB_TEAM to the team name; set BB_API_AUTH_TOKEN to auth
# credentials (e.g. username:password)
: "${BB_TEAM:=vgtf}"
[[ -n $BB_API_AUTH_TOKEN ]] || {
  echo >&2 "$0: need to set \$BB_API_AUTH_TOKEN"
  exit 1
}

for need in curl jq; do 
  type -P "$need" >/dev/null || {
    echo >&2 "$0: $need not found."
    exit 1
  }
done

# use paging api to retrieve all values from an API endpoint
_bbcat() {
  local data='{ "next": "'"$1"'" }' q
  while next=$(jq -r -e .next <<<"$data"); do 
    data=$(curl -sSu "$BB_API_AUTH_TOKEN" "$next")
    case "$data" in 
    '['*) q=. ;;
    '{'*) q='.values[]'
    esac
    jq -r "$q" <<<"$data"
  done
}

bbapi_lsrepos() { 
  _bbcat https://bitbucket.org/api/2.0/repositories/"${1:-$BB_TEAM}" | jq -r .name | sort
}


bbapi_lsgroups() {
   _bbcat https://bitbucket.org/api/1.0/groups/"${1:-$BB_TEAM}" | jq -r '.[]|.name' | sort 
}


bbapi_lsgroup() {
  curl -sSu "$BB_API_AUTH_TOKEN" https://bitbucket.org/api/1.0/groups/$BB_TEAM/"$1" | jq -r '.members[]|.username'
}

bbapi_lsprs() {
  curl -sSu "$BB_API_AUTH_TOKEN" https://api.bitbucket.org/1.0/user/pullrequests/dashboard
}

bbapi_lsteam() {
  _bbcat https://bitbucket.org/api/2.0/teams/"${1:-$BB_TEAM}"/members  | jq -r .username | sort
}

bbapi_help() {
   printf 'Usage: %s subcommand [arguments]\n' "$0"
   printf '  Available subcommands:\n'
   declare -F | sed -ne $'s/^declare -f bbapi_/    /p'
}

if (( ! $# )); then
  echo >&2 "Usage: $0 subcommand [arguments]"
  exit 1
fi
func=bbapi_$1
shift
if [[ $(type -t "$func") == function  ]]; then
  "$func" "$@"
else
  echo >&2 "$0: Unknown subcommand '$func'"
  exit 1
fi
